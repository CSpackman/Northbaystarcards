{"ast":null,"code":"var _jsxFileName = \"/Users/connorspackman/Documents/Northbaystarcards/northbaystarcards/src/context/shopContext.js\";\nimport React, { Component } from \"react\";\nimport Client from \"shopify-buy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShopContext = /*#__PURE__*/React.createContext();\nconst client = Client.buildClient({\n  storefrontAccessToken: \"9032bf70b61916849fe2fd029e49684f\",\n  domain: \"northbaystarcards.myshopify.com\"\n}); //dd4d4dc146542ba7763305d71d1b3d38\n//graphql.myshopify.com\n//northbaystarcards.myshopify.com\n//9032bf70b61916849fe2fd029e49684f\n\nclass ShopProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      product: {},\n      checkout: {},\n      filter: \"All\"\n    };\n\n    this.createCheckout = async () => {\n      const checkout = await client.checkout.create();\n      localStorage.setItem(\"checkout\", checkout.id);\n      await this.setState({\n        checkout: checkout\n      });\n    };\n\n    this.fetchCheckout = async checkoutId => {\n      client.checkout.fetch(checkoutId).then(checkout => {\n        this.setState({\n          checkout: checkout\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.addItemToCheckout = async (variantId, quantity) => {\n      const lineItemsToAdd = [{\n        variantId,\n        quantity: parseInt(quantity, 10)\n      }];\n      const checkout = await client.checkout.addLineItems(this.state.checkout.id, lineItemsToAdd);\n      this.setState({\n        checkout: checkout\n      });\n    };\n\n    this.checkoutLineItemsRemove = async (checkoutId, lineItemIds) => {\n      client.checkout.removeLineItems(checkoutId, lineItemIds).then(checkout => {\n        this.setState({\n          checkout: checkout\n        });\n      });\n    };\n\n    this.fetchAllProducts = async () => {\n      const products = await client.product.fetchAll();\n      this.setState({\n        products: products\n      });\n    };\n\n    this.fetchProductWithId = async id => {\n      const product = await client.product.fetch(id);\n      this.setState({\n        product: product\n      }); //console.log(JSON.stringify(product));\n\n      return product;\n    };\n\n    this.setFilter = string => {\n      this.setState({\n        filter: string\n      });\n    };\n  }\n\n  componentDidMount() {\n    //Check if localStorage has a checkout_id saved\n    if (localStorage.checkout) {\n      this.fetchCheckout(localStorage.checkout);\n    } else {\n      this.createCheckout();\n    } //if there is no checkout_id in localStorage then we will create a new checkout\n    //else fetch the checkout from shopify\n\n  }\n\n  addCommas(x) {\n    var parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n      value: { ...this.state,\n        fetchAllProducts: this.fetchAllProducts,\n        fetchProductWithId: this.fetchProductWithId,\n        addItemToCheckout: this.addItemToCheckout,\n        checkoutLineItemsRemove: this.checkoutLineItemsRemove,\n        addCommas: this.addCommas,\n        setFilter: this.setFilter\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ShopConsumer = ShopContext.Consumer;\nexport { ShopConsumer, ShopContext };\nexport default ShopProvider;","map":{"version":3,"sources":["/Users/connorspackman/Documents/Northbaystarcards/northbaystarcards/src/context/shopContext.js"],"names":["React","Component","Client","ShopContext","createContext","client","buildClient","storefrontAccessToken","domain","ShopProvider","state","products","product","checkout","filter","createCheckout","create","localStorage","setItem","id","setState","fetchCheckout","checkoutId","fetch","then","catch","err","console","log","addItemToCheckout","variantId","quantity","lineItemsToAdd","parseInt","addLineItems","checkoutLineItemsRemove","lineItemIds","removeLineItems","fetchAllProducts","fetchAll","fetchProductWithId","setFilter","string","componentDidMount","addCommas","x","parts","toString","split","replace","join","render","props","children","ShopConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Client from \"shopify-buy\";\n\nconst ShopContext = React.createContext();\n\nconst client = Client.buildClient({\n  storefrontAccessToken: \"9032bf70b61916849fe2fd029e49684f\",\n  domain: \"northbaystarcards.myshopify.com\",\n});\n\n//dd4d4dc146542ba7763305d71d1b3d38\n//graphql.myshopify.com\n\n//northbaystarcards.myshopify.com\n//9032bf70b61916849fe2fd029e49684f\n\nclass ShopProvider extends Component {\n  state = {\n    products: [],\n    product: {},\n    checkout: {},\n    filter: \"All\"\n  };\n\n  componentDidMount() {\n\n    //Check if localStorage has a checkout_id saved\n    if (localStorage.checkout) {\n      this.fetchCheckout(localStorage.checkout);\n    } else {\n      this.createCheckout();\n    }\n    //if there is no checkout_id in localStorage then we will create a new checkout\n\n    //else fetch the checkout from shopify\n  }\n\n  createCheckout = async () => {\n    const checkout = await client.checkout.create();\n    localStorage.setItem(\"checkout\", checkout.id);\n    await this.setState({ checkout: checkout });\n  };\n\n  fetchCheckout = async (checkoutId) => {\n    client.checkout\n      .fetch(checkoutId)\n      .then((checkout) => {\n        this.setState({ checkout: checkout });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  addItemToCheckout = async (variantId, quantity) => {\n    const lineItemsToAdd = [\n      {\n        variantId,\n        quantity: parseInt(quantity, 10),\n      },\n    ];\n\n    const checkout = await client.checkout.addLineItems(\n      this.state.checkout.id,\n      lineItemsToAdd\n    );\n\n\n\n    this.setState({ checkout: checkout });\n  };\n\n  checkoutLineItemsRemove = async (checkoutId, lineItemIds) => {\n  client.checkout.removeLineItems(checkoutId, lineItemIds).then((checkout) => {\n  this.setState({ checkout: checkout });\n});\n\n  };\n\n\n\n  fetchAllProducts = async () => {\n    const products = await client.product.fetchAll();\n    this.setState({ products: products });\n  };\n\n  fetchProductWithId = async (id) => {\n    const product = await client.product.fetch(id);\n    this.setState({ product: product });\n    //console.log(JSON.stringify(product));\n\n    return product;\n  };\n\n   addCommas(x){\n    var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n\n\n\nsetFilter =(string) =>{\n  this.setState({filter: string});\n}\n\n\n\n  render() {\n    return (\n      <ShopContext.Provider\n        value={{\n          ...this.state,\n          fetchAllProducts: this.fetchAllProducts,\n          fetchProductWithId: this.fetchProductWithId,\n          addItemToCheckout: this.addItemToCheckout,\n          checkoutLineItemsRemove: this.checkoutLineItemsRemove,\n          addCommas: this.addCommas,\n          setFilter: this.setFilter,\n        }}\n      >\n        {this.props.children}\n      </ShopContext.Provider>\n    );\n  }\n}\n\nconst ShopConsumer = ShopContext.Consumer;\n\nexport { ShopConsumer, ShopContext };\n\nexport default ShopProvider;\n"]},"metadata":{},"sourceType":"module"}